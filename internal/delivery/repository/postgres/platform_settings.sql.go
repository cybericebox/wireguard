// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: platform_settings.sql

package postgres

import (
	"context"
)

const getVPNServerPrivateKey = `-- name: GetVPNServerPrivateKey :one
select value
from platform_settings
where type = 'vpn'
  and key = 'private_key'
`

func (q *Queries) GetVPNServerPrivateKey(ctx context.Context) (string, error) {
	row := q.db.QueryRow(ctx, getVPNServerPrivateKey)
	var value string
	err := row.Scan(&value)
	return value, err
}

const getVPNServerPublicKey = `-- name: GetVPNServerPublicKey :one
select value
from platform_settings
where type = 'vpn'
  and key = 'public_key'
`

func (q *Queries) GetVPNServerPublicKey(ctx context.Context) (string, error) {
	row := q.db.QueryRow(ctx, getVPNServerPublicKey)
	var value string
	err := row.Scan(&value)
	return value, err
}

const setVPNServerPrivateKey = `-- name: SetVPNServerPrivateKey :exec
insert into platform_settings (type, key, value)
values ('vpn', 'private_key', $1)
`

func (q *Queries) SetVPNServerPrivateKey(ctx context.Context, value string) error {
	_, err := q.db.Exec(ctx, setVPNServerPrivateKey, value)
	return err
}

const setVPNServerPublicKey = `-- name: SetVPNServerPublicKey :exec
insert into platform_settings (type, key, value)
values ('vpn', 'public_key', $1)
`

func (q *Queries) SetVPNServerPublicKey(ctx context.Context, value string) error {
	_, err := q.db.Exec(ctx, setVPNServerPublicKey, value)
	return err
}
